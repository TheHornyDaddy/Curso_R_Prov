colnames(sueldos) <- temporadas
rownames(sueldos) <- jugadores
#Juegos
KobeBryant_j <- c(80,77,82,82,73,82,58,78,6,35)
JoeJohnson_j <- c(82,57,82,79,76,72,60,72,79,80)
LeBronJames_j <- c(79,78,75,81,76,79,62,76,77,69)
CarmeloAnthony_j <- c(80,65,77,66,69,77,55,67,77,40)
DwightHoward_j <- c(82,82,82,79,82,78,54,76,71,41)
ChrisBosh_j <- c(70,69,67,77,70,77,57,74,79,44)
ChrisPaul_j <- c(78,64,80,78,45,80,60,70,62,82)
KevinDurant_j <- c(35,35,80,74,82,78,66,81,81,27)
DerrickRose_j <- c(40,40,40,81,78,81,39,0,10,51)
DwayneWade_j <- c(75,51,51,79,77,76,49,69,54,62)
#Matriz
juegos = rbind(KobeBryant_j, JoeJohnson_j, LeBronJames_j, CarmeloAnthony_j, DwightHoward_j, ChrisBosh_j, ChrisPaul_j, KevinDurant_j, DerrickRose_j, DwayneWade_j)
rm(KobeBryant_j, JoeJohnson_j, CarmeloAnthony_j, DwightHoward_j, ChrisBosh_j, LeBronJames_j, ChrisPaul_j, DerrickRose_j, DwayneWade_j, KevinDurant_j)
colnames(juegos) <- temporadas
rownames(juegos) <- jugadores
#Minutos Jugados
KobeBryant_mj <- c(3277,3140,3192,2960,2835,2779,2232,3013,177,1207)
JoeJohnson_mj <- c(3340,2359,3343,3124,2886,2554,2127,2642,2575,2791)
LeBronJames_mj <- c(3361,3190,3027,3054,2966,3063,2326,2877,2902,2493)
CarmeloAnthony_mj <- c(2941,2486,2806,2277,2634,2751,1876,2482,2982,1428)
DwightHoward_mj <- c(3021,3023,3088,2821,2843,2935,2070,2722,2396,1223)
ChrisBosh_mj <- c(2751,2658,2425,2928,2526,2795,2007,2454,2531,1556)
ChrisPaul_mj <- c(2808,2353,3006,3002,1712,2880,2181,2335,2171,2857)
KevinDurant_mj <- c(1255,1255,2768,2885,3239,3038,2546,3119,3122,913)
DerrickRose_mj <- c(1168,1168,1168,3000,2871,3026,1375,0,311,1530)
DwayneWade_mj <- c(2892,1931,1954,3048,2792,2823,1625,2391,1775,1971)
#Matriz
minutos_jugados <- rbind(KobeBryant_mj, JoeJohnson_mj, LeBronJames_mj, CarmeloAnthony_mj, DwightHoward_mj, ChrisBosh_mj, ChrisPaul_mj, KevinDurant_mj, DerrickRose_mj, DwayneWade_mj)
rm(KobeBryant_mj, JoeJohnson_mj, CarmeloAnthony_mj, DwightHoward_mj, ChrisBosh_mj, LeBronJames_mj, ChrisPaul_mj, DerrickRose_mj, DwayneWade_mj, KevinDurant_mj)
colnames(minutos_jugados) <- temporadas
rownames(minutos_jugados) <- jugadores
#Tiros Anotados
KobeBryant_ta <- c(978,813,775,800,716,740,574,738,31,266)
JoeJohnson_ta <- c(632,536,647,620,635,514,423,445,462,446)
LeBronJames_ta <- c(875,772,794,789,768,758,621,765,767,624)
CarmeloAnthony_ta <- c(756,691,728,535,688,684,441,669,743,358)
DwightHoward_ta <- c(468,526,583,560,510,619,416,470,473,251)
ChrisBosh_ta <- c(549,543,507,615,600,524,393,485,492,343)
ChrisPaul_ta <- c(407,381,630,631,314,430,425,412,406,568)
KevinDurant_ta <- c(306,306,587,661,794,711,643,731,849,238)
DerrickRose_ta <- c(208,208,208,574,672,711,302,0,58,338)
DwayneWade_ta <- c(699,472,439,854,719,692,416,569,415,509)
#Matriz
tiros_anotados <- rbind(KobeBryant_ta, JoeJohnson_ta, LeBronJames_ta, CarmeloAnthony_ta, DwightHoward_ta, ChrisBosh_ta, ChrisPaul_ta, KevinDurant_ta, DerrickRose_ta, DwayneWade_ta)
rm(KobeBryant_ta, JoeJohnson_ta, CarmeloAnthony_ta, DwightHoward_ta, ChrisBosh_ta, LeBronJames_ta, ChrisPaul_ta, DerrickRose_ta, DwayneWade_ta, KevinDurant_ta)
colnames(tiros_anotados) <- temporadas
rownames(tiros_anotados) <- jugadores
#Tiros Intentados
KobeBryant_ti <- c(2173,1757,1690,1712,1569,1639,1336,1595,73,713)
JoeJohnson_ti <- c(1395,1139,1497,1420,1386,1161,931,1052,1018,1025)
LeBronJames_ti <- c(1823,1621,1642,1613,1528,1485,1169,1354,1353,1279)
CarmeloAnthony_ti <- c(1572,1453,1481,1207,1502,1503,1025,1489,1643,806)
DwightHoward_ti <- c(881,873,974,979,834,1044,726,813,800,423)
ChrisBosh_ti <- c(1087,1094,1027,1263,1158,1056,807,907,953,745)
ChrisPaul_ti <- c(947,871,1291,1255,637,928,890,856,870,1170)
KevinDurant_ti <- c(647,647,1366,1390,1668,1538,1297,1433,1688,467)
DerrickRose_ti <- c(436,436,436,1208,1373,1597,695,0,164,835)
DwayneWade_ti <- c(1413,962,937,1739,1511,1384,837,1093,761,1084)
#Matriz
tiros_intentados <- rbind(KobeBryant_ti, JoeJohnson_ti, LeBronJames_ti, CarmeloAnthony_ti, DwightHoward_ti, ChrisBosh_ti, ChrisPaul_ti, KevinDurant_ti, DerrickRose_ti, DwayneWade_ti)
rm(KobeBryant_ti, JoeJohnson_ti, LeBronJames_ti, CarmeloAnthony_ti, DwightHoward_ti, ChrisBosh_ti, ChrisPaul_ti, KevinDurant_ti, DerrickRose_ti, DwayneWade_ti)
colnames(tiros_intentados) <- temporadas
rownames(tiros_intentados) <- jugadores
#Puntos
KobeBryant_puntos <- c(2832,2430,2323,2201,1970,2078,1616,2133,83,782)
JoeJohnson_puntos <- c(1653,1426,1779,1688,1619,1312,1129,1170,1245,1154)
LeBronJames_puntos <- c(2478,2132,2250,2304,2258,2111,1683,2036,2089,1743)
CarmeloAnthony_puntos <- c(2122,1881,1978,1504,1943,1970,1245,1920,2112,966)
DwightHoward_puntos <- c(1292,1443,1695,1624,1503,1784,1113,1296,1297,646)
ChrisBosh_puntos <- c(1572,1561,1496,1746,1678,1438,1025,1232,1281,928)
ChrisPaul_puntos <- c(1258,1104,1684,1781,841,1268,1189,1186,1185,1564)
KevinDurant_puntos <- c(903,903,1624,1871,2472,2161,1850,2280,2593,686)
DerrickRose_puntos <- c(597,597,597,1361,1619,2026,852,0,159,904)
DwayneWade_puntos <- c(2040,1397,1254,2386,2045,1941,1082,1463,1028,1331)
#Matriz
puntos <- rbind(KobeBryant_puntos, JoeJohnson_puntos, LeBronJames_puntos, CarmeloAnthony_puntos, DwightHoward_puntos, ChrisBosh_puntos, ChrisPaul_puntos, KevinDurant_puntos, DerrickRose_puntos, DwayneWade_puntos)
rm(KobeBryant_puntos, JoeJohnson_puntos, LeBronJames_puntos, CarmeloAnthony_puntos, DwightHoward_puntos, ChrisBosh_puntos, ChrisPaul_puntos, KevinDurant_puntos, DerrickRose_puntos, DwayneWade_puntos)
colnames(puntos) <- temporadas
rownames(puntos) <- jugadores
#Matriz para Tiros Libres
#Une los vectores correspondientes para esta matriz
tiros_libres <- rbind(KobeBryant_TL, JoeJohnson_TL, LeBronJames_TL, CarmeloAnthony_TL, DwightHoward_TL, ChrisBosh_TL, ChrisPaul_TL, KevinDurant_TL, DerrickRose_TL, DwayneWade_TL)
KobeBryant_TL <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_TL <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_TL <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_TL <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_TL <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_TL <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_TL <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_TL <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_TL <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_TL <- c(629,432,354,590,534,494,235,308,189,284)
#Matriz para Tiros Libres
#Une los vectores correspondientes para esta matriz
tiros_libres <- rbind(KobeBryant_TL, JoeJohnson_TL, LeBronJames_TL, CarmeloAnthony_TL, DwightHoward_TL, ChrisBosh_TL, ChrisPaul_TL, KevinDurant_TL, DerrickRose_TL, DwayneWade_TL)
#Elimina los vectores que ya no necesitamos
rm(KobeBryant_TL, JoeJohnson_TL, LeBronJames_TL, CarmeloAnthony_TL, DwightHoward_TL, ChrisBosh_TL, ChrisPaul_TL, KevinDurant_TL, DerrickRose_TL, DwayneWade_TL)
#Agrega el nombre de las columnas
colnames(tiros_libres) <- jugadores
#Agrega el nombre de las columnas
colnames(tiros_libres) <- jugadores
#Agrega el nombre de las columnas
colnames(tiros_libres) <- temporadas
#Agrega el nombre de las filas
rownames(tiros_libres) <- jugadores
#Revisar la matriz
tiros_libres
KobeBryant_TLI <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_TLI <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_TLI <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_TLI <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_TLI <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_TLI <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_TLI <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_TLI <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_TLI <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_TLI <- c(803,535,467,771,702,652,297,425,258,370)
#Matriz para Tiros Libres Intentados
#Une los vectores correspondientes para esta matriz
tiros_libres_intentados <- rbind(KobeBryant_TLI, JoeJohnson_TLI, LeBronJames_TLI, CarmeloAnthony_TLI, DwightHoward_TLI, ChrisBosh_TLI, ChrisPaul_TLI, KevinDurant_TLI, DerrickRose_TLI, DwayneWade_TLI)
#Elimina los vectores que ya no necesitamos
rm(KobeBryant_TLI, JoeJohnson_TLI, LeBronJames_TLI, CarmeloAnthony_TLI, DwightHoward_TLI, ChrisBosh_TLI, ChrisPaul_TLI, KevinDurant_TLI, DerrickRose_TLI, DwayneWade_TLI)
#Agrega el nombre de las columnas
colnames(tiros_libres_intentados) <- temporadas
#Agrega el nombre de las columnas
rownames(tiros_libres_intentados) <- temporadas
#Agrega el nombre de las filas
colnames(tiros_libres_intentados) <- jugadores
#Revisa la matriz
tiros_libres_intentados
#Agrega el nombre de las columnas
colnames(tiros_libres_intentados) <- temporadas
#Agrega el nombre de las filas
rownames(tiros_libres_intentados) <- jugadores
#Revisa la matriz
tiros_libres_intentados
#Recrea la funci?n para graficar
mi_funcion <- function(datos, filas=1:10) {
matplot(t(datos[filas,,drop=F]), type="b", pch=15:18, col=c(1:4,6), main="An?lisis de jugadores")
legend("bottomleft", inset=0.01, legend=jugadores[filas], col=c(1:4,6), pch=15:18, horiz=F)
}
#Visualiza las nuevas matrices
mi_funcion(tiros_libres)
matplot(t(datos[filas,,drop=F]), type="b", pch=15:18, col=c(1:4,6), main="Análisis de jugadores")
#Recrea la funci?n para graficar
mi_funcion <- function(datos, filas=1:10) {
matplot(t(datos[filas,,drop=F]), type="b", pch=15:18, col=c(1:4,6), main="Análisis de jugadores")
legend("bottomleft", inset=0.01, legend=jugadores[filas], col=c(1:4,6), pch=15:18, horiz=F)
}
#Visualiza las nuevas matrices
mi_funcion(tiros_libres)
mi_funcion(tiros_libres_intentados)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Jueegos)
mi_funcion(tiros_libres/tiros_libres_intentados)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Juegos)
mi_funcion(tiros_libres_intentados/juegos)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Juegos)
mi_funcion(tiros_libres_intentados/juegos)
#Parte 2 - Precisi?n en Tiros Libres
mi_funcion(tiros_libres/tiros_libres_intentados)
#Y a?n as? la precisi?n de Chris Paul es una de las m?s elevadas
#Tambi?n f?jate que la precisi?n de Dwight Howard est? muy baja
#comparada con otros jugadores. Si recuerdas, comparaddo con
#otros jugadores, Dwight Howard era muy preciso en tiros de campo
mi_funcion(tiros_anotados/tiros_intentados)
#Parte 3 - Estilo de juego del jugador sin contabilizar tiros libres
mi_funcion((puntos - tiros_libres)/tiros_anotados)
(tiros_libres)
#Visualiza las nuevas matrices
mi_funcion(tiros_libres)
mi_funcion(tiros_libres_intentados)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Juegos)
mi_funcion(tiros_libres_intentados/juegos)
mi_funcion(tiros_libres_intentados)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Juegos)
mi_funcion(tiros_libres_intentados/juegos)
#Parte 2 - Precisi?n en Tiros Libres
mi_funcion(tiros_libres/tiros_libres_intentados)
#Y a?n as? la precisi?n de Chris Paul es una de las m?s elevadas
#Tambi?n f?jate que la precisi?n de Dwight Howard est? muy baja
#comparada con otros jugadores. Si recuerdas, comparaddo con
#otros jugadores, Dwight Howard era muy preciso en tiros de campo
mi_funcion(tiros_anotados/tiros_intentados)
#Parte 3 - Estilo de juego del jugador sin contabilizar tiros libres
mi_funcion((puntos - tiros_libres)/tiros_anotados)
#Ejecuta el c?digo inferior para crear 3 nuevos vectores
codigo_pais <- c("ABW","AFG","AGO","ALB","ARE","ARG","ARM","ATG","AUS","AUT","AZE","BDI","BEL","BEN","BFA","BGD","BGR","BHR","BHS","BIH","BLR","BLZ","BOL","BRA","BRB","BRN","BTN","BWA","CAF","CAN","CHE","CHL","CHN","CIV","CMR","COG","COL","COM","CPV","CRI","CUB","CYP","CZE","DEU","DJI","DNK","DOM","DZA","ECU","EGY","ERI","ESP","EST","ETH","FIN","FJI","FRA","FSM","GAB","GBR","GEO","GHA","GIN","GMB","GNB","GNQ","GRC","GRD","GTM","GUM","GUY","HKG","HND","HRV","HTI","HUN","IDN","IND","IRL","IRN","IRQ","ISL","ITA","JAM","JOR","JPN","KAZ","KEN","KGZ","KHM","KIR","KOR","KWT","LAO","LBN","LBR","LBY","LCA","LKA","LSO","LTU","LUX","LVA","MAC","MAR","MDA","MDG","MDV","MEX","MKD","MLI","MLT","MMR","MNE","MNG","MOZ","MRT","MUS","MWI","MYS","NAM","NCL","NER","NGA","NIC","NLD","NOR","NPL","NZL","OMN","PAK","PAN","PER","PHL","PNG","POL","PRI","PRT","PRY","PYF","QAT","ROU","RUS","RWA","SAU","SDN","SEN","SGP","SLB","SLE","SLV","SOM","SSD","STP","SUR","SVK","SVN","SWE","SWZ","SYR","TCD","TGO","THA","TJK","TKM","TLS","TON","TTO","TUN","TUR","TZA","UGA","UKR","URY","USA","UZB","VCT","VEN","VIR","VNM","VUT","WSM","YEM","ZAF","COD","ZMB","ZWE")
expectativa_vida_al_nacer_1960 <- c(65.5693658536586,32.328512195122,32.9848292682927,62.2543658536585,52.2432195121951,65.2155365853659,65.8634634146342,61.7827317073171,70.8170731707317,68.5856097560976,60.836243902439,41.2360487804878,69.7019512195122,37.2782682926829,34.4779024390244,45.8293170731707,69.2475609756098,52.0893658536585,62.7290487804878,60.2762195121951,67.7080975609756,59.9613658536585,42.1183170731707,54.2054634146342,60.7380487804878,62.5003658536585,32.3593658536585,50.5477317073171,36.4826341463415,71.1331707317073,71.3134146341463,57.4582926829268,43.4658048780488,36.8724146341463,41.523756097561,48.5816341463415,56.716756097561,41.4424390243903,48.8564146341463,60.5761951219512,63.9046585365854,69.5939268292683,70.3487804878049,69.3129512195122,44.0212682926829,72.1765853658537,51.8452682926829,46.1351219512195,53.215,48.0137073170732,37.3629024390244,69.1092682926829,67.9059756097561,38.4057073170732,68.819756097561,55.9584878048781,69.8682926829268,57.5865853658537,39.5701219512195,71.1268292682927,63.4318536585366,45.8314634146342,34.8863902439024,32.0422195121951,37.8404390243902,36.7330487804878,68.1639024390244,59.8159268292683,45.5316341463415,61.2263414634146,60.2787317073171,66.9997073170732,46.2883170731707,64.6086585365854,42.1000975609756,68.0031707317073,48.6403170731707,41.1719512195122,69.691756097561,44.945512195122,48.0306829268293,73.4286585365854,69.1239024390244,64.1918292682927,52.6852682926829,67.6660975609756,58.3675853658537,46.3624146341463,56.1280731707317,41.2320243902439,49.2159756097561,53.0013170731707,60.3479512195122,43.2044634146342,63.2801219512195,34.7831707317073,42.6411951219512,57.303756097561,59.7471463414634,46.5107073170732,69.8473170731707,68.4463902439024,69.7868292682927,64.6609268292683,48.4466341463415,61.8127804878049,39.9746829268293,37.2686341463415,57.0656341463415,60.6228048780488,28.2116097560976,67.6017804878049,42.7363902439024,63.7056097560976,48.3688048780488,35.0037073170732,43.4830975609756,58.7452195121951,37.7736341463415,59.4753414634146,46.8803902439024,58.6390243902439,35.5150487804878,37.1829512195122,46.9988292682927,73.3926829268293,73.549756097561,35.1708292682927,71.2365853658537,42.6670731707317,45.2904634146342,60.8817073170732,47.6915853658537,57.8119268292683,38.462243902439,67.6804878048781,68.7196097560976,62.8089268292683,63.7937073170732,56.3570487804878,61.2060731707317,65.6424390243903,66.0552926829268,42.2492926829268,45.6662682926829,48.1876341463415,38.206,65.6598292682927,49.3817073170732,30.3315365853659,49.9479268292683,36.9658780487805,31.6767073170732,50.4513658536585,59.6801219512195,69.9759268292683,68.9780487804878,73.0056097560976,44.2337804878049,52.768243902439,38.0161219512195,40.2728292682927,54.6993170731707,56.1535365853659,54.4586829268293,33.7271219512195,61.3645365853659,62.6575853658537,42.009756097561,45.3844146341463,43.6538780487805,43.9835609756098,68.2995365853659,67.8963902439025,69.7707317073171,58.8855365853659,57.7238780487805,59.2851219512195,63.7302195121951,59.0670243902439,46.4874878048781,49.969512195122,34.3638048780488,49.0362926829268,41.0180487804878,45.1098048780488,51.5424634146342)
expectativa_vida_al_nacer_2013 <- c(75.3286585365854,60.0282682926829,51.8661707317073,77.537243902439,77.1956341463415,75.9860975609756,74.5613658536585,75.7786585365854,82.1975609756098,80.890243902439,70.6931463414634,56.2516097560976,80.3853658536585,59.3120243902439,58.2406341463415,71.245243902439,74.4658536585366,76.5459512195122,75.0735365853659,76.2769268292683,72.4707317073171,69.9820487804878,67.9134390243903,74.1224390243903,75.3339512195122,78.5466585365854,69.1029268292683,64.3608048780488,49.8798780487805,81.4011219512195,82.7487804878049,81.1979268292683,75.3530243902439,51.2084634146342,55.0418048780488,61.6663902439024,73.8097317073171,62.9321707317073,72.9723658536585,79.2252195121951,79.2563902439025,79.9497804878049,78.2780487804878,81.0439024390244,61.6864634146342,80.3024390243903,73.3199024390244,74.5689512195122,75.648512195122,70.9257804878049,63.1778780487805,82.4268292682927,76.4243902439025,63.4421951219512,80.8317073170732,69.9179268292683,81.9682926829268,68.9733902439024,63.8435853658537,80.9560975609756,74.079512195122,61.1420731707317,58.216487804878,59.9992682926829,54.8384146341464,57.2908292682927,80.6341463414634,73.1935609756098,71.4863902439024,78.872512195122,66.3100243902439,83.8317073170732,72.9428536585366,77.1268292682927,62.4011463414634,75.2682926829268,68.7046097560976,67.6604146341463,81.0439024390244,75.1259756097561,69.4716829268293,83.1170731707317,82.290243902439,73.4689268292683,73.9014146341463,83.3319512195122,70.45,60.9537804878049,70.2024390243902,67.7720487804878,65.7665853658537,81.459756097561,74.462756097561,65.687243902439,80.1288780487805,60.5203902439024,71.6576829268293,74.9127073170732,74.2402926829268,49.3314634146342,74.1634146341464,81.7975609756098,73.9804878048781,80.3391463414634,73.7090487804878,68.811512195122,64.6739024390244,76.6026097560976,76.5326585365854,75.1870487804878,57.5351951219512,80.7463414634146,65.6540975609756,74.7583658536585,69.0618048780488,54.641512195122,62.8027073170732,74.46,61.466,74.567512195122,64.3438780487805,77.1219512195122,60.8281463414634,52.4421463414634,74.514756097561,81.1048780487805,81.4512195121951,69.222,81.4073170731707,76.8410487804878,65.9636829268293,77.4192195121951,74.2838536585366,68.1315609756097,62.4491707317073,76.8487804878049,78.7111951219512,80.3731707317073,72.7991707317073,76.3340731707317,78.4184878048781,74.4634146341463,71.0731707317073,63.3948292682927,74.1776341463415,63.1670487804878,65.878756097561,82.3463414634146,67.7189268292683,50.3631219512195,72.4981463414634,55.0230243902439,55.2209024390244,66.259512195122,70.99,76.2609756097561,80.2780487804878,81.7048780487805,48.9379268292683,74.7157804878049,51.1914878048781,59.1323658536585,74.2469268292683,69.4001707317073,65.4565609756098,67.5223658536585,72.6403414634147,70.3052926829268,73.6463414634147,75.1759512195122,64.2918292682927,57.7676829268293,71.159512195122,76.8361951219512,78.8414634146341,68.2275853658537,72.8108780487805,74.0744146341464,79.6243902439024,75.756487804878,71.669243902439,73.2503902439024,63.583512195122,56.7365853658537,58.2719268292683,59.2373658536585,55.633)
#(c) Kirill Eremenko, www.superdatascience.com
#Establece el Directorio de Trabajo
getwd()
setwd("C:\\Git\\R_para_Data_Science_con_Ejercicios_Reales\\Marco de Datos (Data Frames)\Curso R - Sección 5 - Práctica - Datos")
setwd("C:\\Git\\R_para_Data_Science_con_Ejercicios_Reales\\Marco de Datos (Data Frames)\\Curso R - Sección 5 - Práctica - Datos")
getwd()
#Importa los datos en el archivo csv
datos <- read.csv("Sección 5 - Práctica.csv")
head(datos)      #crevisa las 6 filas superiores
tail(datos, n=7) #revisa la ?ltimas 7 filas
str(datos)      #revisa la estructura del marco de datos
summary(datos)      #revisa el resumen de los datos
#Filtra el marco de datos
datos1960 <- datos[datos$Año==1960,]
datos2013 <- datos[datos$Año==2013,]
#Revisa el n?mero de filas
summary(datos1960) #187 filas
head(datos)      #crevisa las 6 filas superiores
#Crea los marcos de datos adicionales
adicional1960 <- data.frame(Codigo=codigo_pais, Expectativa.Vida=expectativa_vida_al_nacer_1960)
adicional2013 <- data.frame(Codigo=codigo_pais, Expectativa.Vida=expectativa_vida_al_nacer_2013)
#Revisa los res?menes
summary(adicional1960)
summary(adicional2013)
head(datos)      #crevisa las 6 filas superiores
#Combina el par de Marcos de Datos
combinado1960 <- merge(datos1960, adicional1960, by.x="Código.País", by.y="Codigo")
combinado2013 <- merge(datos1960, adicional2013, by.x="Código.País", by.y="Codigo")
#Revisa las nuevas estructuras
str(combinado1960)
str(combinado2013)
#Podemos ver una columna obsoleta en cada uno de los marcos de datos combinados
#La columna "Año" ya no es requerida. Quitémosla
combinado1960$Año <- NULL
combinado2013$Año <- NULL
#Revisa las estructuras de nuevo
str(combinado1960)
str(combinado2013)
#Hora de la visualizaci?n
library(ggplot2)
#Visualiza el set de datos de 1960
qplot(data=combinado1960, x=Tasa.Fertilidad, y=Expectativa.Vida,
color=Región,                                              #color
size=I(5),
alpha=I(0.6),                                              #transparencia
main="Expectativa de Vida vs Tasa de Fertilidad (1960)"       #título
)
#visualiza el set de datos de 2013
qplot(data=combinado2013, x=Tasa.Fertilidad, y=Expectativa.Vida,
color=Región,                                              #color
size=I(5),
alpha=I(0.6),                                              #transparencia
main="Expectativa de Vida vs Tasa de Fertilidad (2013)"    #título
)
#Revisa las nuevas estructuras
str(combinado1960)
str(combinado2013)
#Explora los datos
datos
head(datos)      #crevisa las 6 filas superiores
tail(datos, n=7) #revisa la últimas 7 filas
str(datos)      #revisa la estructura del marco de datos
summary(datos)      #revisa el resumen de los datos
#?Te diste cuenta que hay m?s de un año en los datos?
#De la descripción del reto sabemos que hay dos: 1960 y 2013
#Filtra el marco de datos
datos1960 <- datos[datos$Año==1960,]
head(datos1960)
datos2013 <- datos[datos$Año==2013,]
head(datos2013)
#Revisa el número de filas
nrow(datos1960) #187 filas
nrow(datos2013) #187 filas. Misma cantidad
#Crea los marcos de datos adicionales
adicional1960 <- data.frame(Codigo=codigo_pais, Expectativa.Vida=expectativa_vida_al_nacer_1960)
adicional2013 <- data.frame(Codigo=codigo_pais, Expectativa.Vida=expectativa_vida_al_nacer_2013)
#Revisa los res?menes
summary(adicional1960)
summary(adicional2013)
#Combina el par de Marcos de Datos
combinado1960 <- merge(datos1960, adicional1960, by.x="Código.País", by.y="Codigo")
combinado2013 <- merge(datos2013, adicional2013, by.x="Código.País", by.y="Codigo")
#Revisa las nuevas estructuras
str(combinado1960)
str(combinado2013)
#Podemos ver una columna obsoleta en cada uno de los marcos de datos combinados
#La columna "Año" ya no es requerida. Quitémosla
combinado1960$Año <- NULL
combinado2013$Año <- NULL
#Revisa las estructuras de nuevo
str(combinado1960)
str(combinado2013)
#Hora de la visualizaci?n
library(ggplot2)
#Visualiza el set de datos de 1960
qplot(data=combinado1960, x=Tasa.Fertilidad, y=Expectativa.Vida,
color=Región,                                              #color
size=I(5),
alpha=I(0.6),                                              #transparencia
main="Expectativa de Vida vs Tasa de Fertilidad (1960)"    #título
)
#visualiza el set de datos de 2013
qplot(data=combinado2013, x=Tasa.Fertilidad, y=Expectativa.Vida,
color=Región,                                              #color
size=I(5),
alpha=I(0.6),                                              #transparencia
main="Expectativa de Vida vs Tasa de Fertilidad (2013)"    #título
)
#Importa los datos
getwd()
setwd("C:\\Git\\R_para_Data_Science_con_Ejercicios_Reales\\Visualizaciones Avanzadas GGPlot2")
getwd()
peliculas <- read.csv("Curso R - Sección 6 - Datos Práctica")
peliculas <- read.csv("Curso R - Sección 6 - Datos Práctica.csv")
head(peliculas) #filas superiores
summary(peliculas) #resumen de las columnas
str(peliculas) #estructura del set de datos
#Activar GGPlot2
#Usar install.package("ggplot2") en caso de no tener el paquete descargado
library(ggplot2)
#Fuera de alcance pero esta interesante:
ggplot(data=peliculas, aes(x=D?a.de.la.Semana..lanzamiento.)) + geom_bar()
#Fuera de alcance pero esta interesante:
ggplot(data=peliculas, aes(x=Día.de.la.Semana..lanzamiento.)) + geom_bar()
#Ahora vamos a filtrar nuestro set de datos para dejar ?nicamente
#los G?neros y los Estudios en los que estamos interesados
#Empezaremos con el filtro de G?nero. Usaremos el operador l?gico
#"or" para seleccionar m?ltiples G?neros:
filtro1 <- (peliculas$Género == "acción") | (peliculas$Género == "aventura") | (peliculas$G?nero == "animaci?n") | (peliculas$G?nero == "comedia") | (peliculas$G?nero == "drama")
#Ahora vamos a filtrar nuestro set de datos para dejar ?nicamente
#los G?neros y los Estudios en los que estamos interesados
#Empezaremos con el filtro de G?nero. Usaremos el operador l?gico
#"or" para seleccionar m?ltiples G?neros:
filtro1 <- (peliculas$Género == "acción") | (peliculas$Género == "aventura") | (peliculas$Género == "animaci?n") | (peliculas$Género == "comedia") | (peliculas$Género == "drama")
#Ahora hagamos lo mismo para los Estudios:
filtro2 <- (peliculas$Estudio == "Buena Vista Studios") | (peliculas$Estudio == "WB") | (peliculas$Estudio == "Fox") | (peliculas$Estudio == "Universal") | (peliculas$Estudio == "Sony") | (peliculas$Estudio == "Paramount Pictures")
#Aplica los filtros de las filas al marco de datos
peliculas2 <- peliculas[filtro1 & filtro2,]
head(peliculas) #filas superiores
# Alternatica con el operador %in%:
# filtro2 <- peliculas$Estudio %in% c("Buena Vista Studios","WB","Fox","Universal","Sony","Paramount Pictures")
filtro1
filtro2
#Prepara los datos del gráfico y las capas de estéticas
#Nota que no le cambiamos el nombre a las columnas
#Usa str() o summary() para encontrar el nombre correcto de las columnas
p <- ggplot(data=peliculas2, aes(x=Día.de.la.semana..lanzamiento., y=Venta...USA))
#Agrega una capa con geometr?a de puntos
p +
geom_point()
#Prepara los datos del gráfico y las capas de estéticas
#Nota que no le cambiamos el nombre a las columnas
#Usa str() o summary() para encontrar el nombre correcto de las columnas
p <- ggplot(data=peliculas2, aes(x=Día.de.la.Semana..lanzamiento., y=Venta...USA))
p #No pasa nada porque se necesita una geometr?a
#Agrega una capa con geometr?a de puntos
p +
geom_point()
#Puedes agregar un boxplot en lugar de los puntos
p +
geom_boxplot()
#Agrega una capa con geometr?a de puntos
p +
geom_point()
#Ahora puedes agregar tama?o y color a los puntos:
p +
geom_jitter(aes(x=Presupuesto...mill., y=Estudio)) +
geom_boxplot(alpha=0.7)
#Ahora puedes agregar tama?o y color a los puntos:
p +
geom_jitter(aes(size=Presupuesto...mill., color=Estudio)) +
geom_boxplot(alpha=0.7)
#Almacenamos nuestro progreso en un nuevo objeto:
q <- p +
geom_jitter(aes(x=Presupuesto...mill., y=Estudio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
q
#Elementos que no son datos (non-data ink)
q <- q +
xlab("Género") + #título del eje x
ylab("% Ventas USA") + #título del eje y
ggtitle("Domestic Gross % by Genre") #título del diagrama
q
#Almacenamos nuestro progreso en un nuevo objeto:
q <- p +
geom_jitter(aes(size=Presupuesto...mill., color=Estudio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
q
#Elementos que no son datos (non-data ink)
q <- q +
xlab("Género") + #título del eje x
ylab("% Ventas USA") + #título del eje y
ggtitle("Domestic Gross % by Genre") #título del diagrama
q
#Tema
q <- q +
theme(
#Título de los ejes:
axis.title.x = element_text(color="Blue", size=20),
axis.title.y = element_text(color="Blue", size=20),
#Texto de los ejes:
axis.text.x = element_text(size=15),
axis.text.y = element_text(size=15),
#T?tulo del gr?fico:
plot.title = element_text(color="Black",
size=25,
hjust = 0.5),
#T?tulo de la Leyenda:
legend.title = element_text(size=15),
#Texto de la Leyenda
legend.text = element_text(size=10)
)
q
#Toque Final. Esto no lo habíamos visto durante el curso
#Pero de esta manera puedes cambiar individualmente el título de tu leyenda
q$labels$size = "Presupuesto $M"
q
q
#Elementos que no son datos (non-data ink)
q <- q +
xlab("Género") + #título del eje x
ylab("% Ventas USA") + #título del eje y
ggtitle("% Ventas por Género") #título del diagrama
#Tema
q <- q +
theme(
#Título de los ejes:
axis.title.x = element_text(color="Blue", size=20),
axis.title.y = element_text(color="Blue", size=20),
#Texto de los ejes:
axis.text.x = element_text(size=15),
axis.text.y = element_text(size=15),
#T?tulo del gr?fico:
plot.title = element_text(color="Black",
size=25,
hjust = 0.5),
#T?tulo de la Leyenda:
legend.title = element_text(size=15),
#Texto de la Leyenda
legend.text = element_text(size=10)
)
q
#Toque Final. Esto no lo habíamos visto durante el curso
#Pero de esta manera puedes cambiar individualmente el título de tu leyenda
q$labels$size = "Presupuesto $M"
q
#Prepara los datos del gráfico y las capas de estéticas
#Nota que no le cambiamos el nombre a las columnas
#Usa str() o summary() para encontrar el nombre correcto de las columnas
p <- ggplot(data=peliculas2, aes(x=Género, y=Venta...USA))
p #No pasa nada porque se necesita una geometr?a
#Agrega una capa con geometr?a de puntos
p +
geom_point()
#Puedes agregar un boxplot en lugar de los puntos
p +
geom_boxplot()
#Agrega los puntos
p +
geom_boxplot() +
geom_point()
#Cambia los puntos por el jitter
p +
geom_boxplot() +
geom_jitter()
#Posiciona el boxplot por encima del jitter
p +
geom_jitter() +
geom_boxplot()
#Agrega transparencia al boxplot
p +
geom_jitter() +
geom_boxplot(alpha=0.7)
#Ahora puedes agregar tama?o y color a los puntos:
p +
geom_jitter(aes(size=Presupuesto...mill., color=Estudio)) +
geom_boxplot(alpha=0.7)
#Vamos a quitarlos:
p +
plot(aes(size=Presupuesto...mill., color=Estudio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
#Almacenamos nuestro progreso en un nuevo objeto:
q <- p +
geom_jitter(aes(size=Presupuesto...mill., color=Estudio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
q
#Elementos que no son datos (non-data ink)
q <- q +
xlab("Género") + #título del eje x
ylab("% Ventas USA") + #título del eje y
ggtitle("% Ventas por Género") #título del diagrama
q
#Tema
q <- q +
theme(
#Título de los ejes:
axis.title.x = element_text(color="Blue", size=20),
axis.title.y = element_text(color="Blue", size=20),
#Texto de los ejes:
axis.text.x = element_text(size=15),
axis.text.y = element_text(size=15),
#T?tulo del gr?fico:
plot.title = element_text(color="Black",
size=25,
hjust = 0.5),
#T?tulo de la Leyenda:
legend.title = element_text(size=15),
#Texto de la Leyenda
legend.text = element_text(size=10)
)
q
#Toque Final. Esto no lo habíamos visto durante el curso
#Pero de esta manera puedes cambiar individualmente el título de tu leyenda
q$labels$size = "Presupuesto $M"
q
