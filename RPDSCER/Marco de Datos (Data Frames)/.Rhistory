#
#Copyright: Estos sets de datos han sido preparados
#con informaci?n disponible al p?blico.
#Sin embargo, estos scripts est?n sujetos a las
#leyes de Derecho de Autor.
#Si desear utilizar estos scripts fuera del curso de
#Programaci?n en Python creado por Kirill Eremenko,
#lo puedes hacer referenciando www.superdatascience.com
#en tu trabajo.
#Comentarios:
#Las temporadas est?n etiquetadas con el primer a?o de
#la temporada
#Ejemplo: la temporada 2012-2013 es presentada como 2012
#Notas adicionales:
# Kevin Durant: 2006 - Datos de temporada universitaria
# Kevin Durant: 2005 - Creada con datos  del 2006
# Derrick Rose: 2012 - No jug?
# Derrick Rose: 2007 - Datos de temporada universitaria
# Derrick Rose: 2006 - Creada con datos de temporada 2007
# Derrick Rose: 2005 - Creada con datos de temporada 2007
#Temporadas
temporadas <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Jugadores
jugadores <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Tiros Libres
KobeBryant_TL <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_TL <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_TL <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_TL <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_TL <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_TL <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_TL <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_TL <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_TL <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_TL <- c(629,432,354,590,534,494,235,308,189,284)
#Matriz
tiros_libres <- rbind(KobeBryant_TL, JoeJohnson_TL, LeBronJames_TL,CarmeloAnthony_TL, DwightHoward_TL, ChrisBosh_TL, ChrisPaul_TL, KevinDurant_TL, DerrickRose_TL, DwayneWade_TL)
rm(KobeBryant_TL, JoeJohnson_TL, LeBronJames_TL,CarmeloAnthony_TL, DwightHoward_TL, ChrisBosh_TL, ChrisPaul_TL, KevinDurant_TL, DerrickRose_TL, DwayneWade_TL)
colnames(tiros_libres) <- temporadas
rownames(tiros_libres) <- jugadores
#Tiros Libres Intentados
KobeBryant_TLI <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_TLI <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_TLI <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_TLI <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_TLI <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_TLI <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_TLI <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_TLI <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_TLI <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_TLI <- c(803,535,467,771,702,652,297,425,258,370)
#Matriz
tiros_libres_intentados <- rbind(KobeBryant_TLI, JoeJohnson_TLI, LeBronJames_TLI,CarmeloAnthony_TLI, DwightHoward_TLI, ChrisBosh_TLI, ChrisPaul_TLI, KevinDurant_TLI, DerrickRose_TLI, DwayneWade_TLI)
rm(KobeBryant_TLI, JoeJohnson_TLI, LeBronJames_TLI,CarmeloAnthony_TLI, DwightHoward_TLI, ChrisBosh_TLI, ChrisPaul_TLI, KevinDurant_TLI, DerrickRose_TLI, DwayneWade_TLI)
colnames(tiros_libres_intentados) <- temporadas
rownames(tiros_libres_intentados) <- jugadores
tiros_libres_intentados
# Querido estudiante,
#
#?Bienvenido al mundo de los datos del Basketball!
#Estoy seguro de que vas a disfrutar esta secci?n del curso de Programaci?n en R
#
#Instrucciones para este set de datos:
#Simplemente selecciona todas las l?neas en este script
#presionando CTRL+A en Windows o CMND+A en Mac, y ejec?talas
#Una vez que hayas ejecutado los comandos, los siguientes objetos
#ser?n creados:
#
#Matrices:
# - sueldos
# - juegos
# - minutos_jugados
# - tiros_anotados
# - tiros_intentados
# - puntos
#
# Vectores:
# - jugadores
# - temporadas
#
#Esto lo vamos a comprender dentro del curso.
#
# Sinceramente
# Diego L?pez
#www.superdatascience.com
#
#Copyright: Estos sets de datos fueron creados usando informaci?n disponible al p?blico
#	Sin embargo, estos scripts est?n protegidos por leyes de Derecho de Autor
#	Si deseas usar este script de R fuera del curso de Programaci?n en R,
#	creado por Kirill Eremenko, lo puedes hacer siempre y cuando hagas referencia a
#	www.superdatascience.com en tu trabajo
#
#Comentarios:
#Las temporadas est?n etiquetadas con el primer a?o de la temporada
#Ejemplo: la temporada 2012-2013 es presentada como 2012
#
# Notas adicionales:
#Kevin Durant: 2006 - Datos de temporada universitaria
#Kevin Durant: 2005 - Creada con datos  del 2006
#Derrick Rose: 2012 - No jug?
#Derrick Rose: 2007 - Datos de temporada universitaria
#Derrick Rose: 2006 - Creada con datos de temporada 2007
#Derrick Rose: 2005 - Creada con datos de temporada 2007
#Temporadas
temporadas <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Jugadores
jugadores <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Sueldo
KobeBryant_sueldos <- c(15946875,17718750,19490625,21262500,23034375,24806250,25244493,27849149,30453805,23500000)
JoeJohnson_sueldos <- c(12000000,12744189,13488377,14232567,14976754,16324500,18038573,19752645,21466718,23180790)
LeBronJames_sueldos <- c(4621800,5828090,13041250,14410581,15779912,14500000,16022500,17545000,19067500,20644400)
CarmeloAnthony_sueldos <- c(3713640,4694041,13041250,14410581,15779912,17149243,18518574,19450000,22407474,22458000)
DwightHoward_sueldos <- c(4493160,4806720,6061274,13758000,15202590,16647180,18091770,19536360,20513178,21436271)
ChrisBosh_sueldos <- c(3348000,4235220,12455000,14410581,15779912,14500000,16022500,17545000,19067500,20644400)
ChrisPaul_sueldos <- c(3144240,3380160,3615960,4574189,13520500,14940153,16359805,17779458,18668431,20068563)
KevinDurant_sueldos <- c(0,0,4171200,4484040,4796880,6053663,15506632,16669630,17832627,18995624)
DerrickRose_sueldos <- c(0,0,0,4822800,5184480,5546160,6993708,16402500,17632688,18862875)
DwayneWade_sueldos <- c(3031920,3841443,13041250,14410581,15779912,14200000,15691000,17182000,18673000,15000000)
#Matriz
sueldos <- rbind(KobeBryant_sueldos, JoeJohnson_sueldos, LeBronJames_sueldos, CarmeloAnthony_sueldos, DwightHoward_sueldos, ChrisBosh_sueldos, ChrisPaul_sueldos, KevinDurant_sueldos, DerrickRose_sueldos, DwayneWade_sueldos)
rm(KobeBryant_sueldos, JoeJohnson_sueldos, CarmeloAnthony_sueldos, DwightHoward_sueldos, ChrisBosh_sueldos, LeBronJames_sueldos, ChrisPaul_sueldos, DerrickRose_sueldos, DwayneWade_sueldos, KevinDurant_sueldos)
colnames(sueldos) <- temporadas
rownames(sueldos) <- jugadores
#Juegos
KobeBryant_j <- c(80,77,82,82,73,82,58,78,6,35)
JoeJohnson_j <- c(82,57,82,79,76,72,60,72,79,80)
LeBronJames_j <- c(79,78,75,81,76,79,62,76,77,69)
CarmeloAnthony_j <- c(80,65,77,66,69,77,55,67,77,40)
DwightHoward_j <- c(82,82,82,79,82,78,54,76,71,41)
ChrisBosh_j <- c(70,69,67,77,70,77,57,74,79,44)
ChrisPaul_j <- c(78,64,80,78,45,80,60,70,62,82)
KevinDurant_j <- c(35,35,80,74,82,78,66,81,81,27)
DerrickRose_j <- c(40,40,40,81,78,81,39,0,10,51)
DwayneWade_j <- c(75,51,51,79,77,76,49,69,54,62)
#Matriz
juegos = rbind(KobeBryant_j, JoeJohnson_j, LeBronJames_j, CarmeloAnthony_j, DwightHoward_j, ChrisBosh_j, ChrisPaul_j, KevinDurant_j, DerrickRose_j, DwayneWade_j)
rm(KobeBryant_j, JoeJohnson_j, CarmeloAnthony_j, DwightHoward_j, ChrisBosh_j, LeBronJames_j, ChrisPaul_j, DerrickRose_j, DwayneWade_j, KevinDurant_j)
colnames(juegos) <- temporadas
rownames(juegos) <- jugadores
#Minutos Jugados
KobeBryant_mj <- c(3277,3140,3192,2960,2835,2779,2232,3013,177,1207)
JoeJohnson_mj <- c(3340,2359,3343,3124,2886,2554,2127,2642,2575,2791)
LeBronJames_mj <- c(3361,3190,3027,3054,2966,3063,2326,2877,2902,2493)
CarmeloAnthony_mj <- c(2941,2486,2806,2277,2634,2751,1876,2482,2982,1428)
DwightHoward_mj <- c(3021,3023,3088,2821,2843,2935,2070,2722,2396,1223)
ChrisBosh_mj <- c(2751,2658,2425,2928,2526,2795,2007,2454,2531,1556)
ChrisPaul_mj <- c(2808,2353,3006,3002,1712,2880,2181,2335,2171,2857)
KevinDurant_mj <- c(1255,1255,2768,2885,3239,3038,2546,3119,3122,913)
DerrickRose_mj <- c(1168,1168,1168,3000,2871,3026,1375,0,311,1530)
DwayneWade_mj <- c(2892,1931,1954,3048,2792,2823,1625,2391,1775,1971)
#Matriz
minutos_jugados <- rbind(KobeBryant_mj, JoeJohnson_mj, LeBronJames_mj, CarmeloAnthony_mj, DwightHoward_mj, ChrisBosh_mj, ChrisPaul_mj, KevinDurant_mj, DerrickRose_mj, DwayneWade_mj)
rm(KobeBryant_mj, JoeJohnson_mj, CarmeloAnthony_mj, DwightHoward_mj, ChrisBosh_mj, LeBronJames_mj, ChrisPaul_mj, DerrickRose_mj, DwayneWade_mj, KevinDurant_mj)
colnames(minutos_jugados) <- temporadas
rownames(minutos_jugados) <- jugadores
#Tiros Anotados
KobeBryant_ta <- c(978,813,775,800,716,740,574,738,31,266)
JoeJohnson_ta <- c(632,536,647,620,635,514,423,445,462,446)
LeBronJames_ta <- c(875,772,794,789,768,758,621,765,767,624)
CarmeloAnthony_ta <- c(756,691,728,535,688,684,441,669,743,358)
DwightHoward_ta <- c(468,526,583,560,510,619,416,470,473,251)
ChrisBosh_ta <- c(549,543,507,615,600,524,393,485,492,343)
ChrisPaul_ta <- c(407,381,630,631,314,430,425,412,406,568)
KevinDurant_ta <- c(306,306,587,661,794,711,643,731,849,238)
DerrickRose_ta <- c(208,208,208,574,672,711,302,0,58,338)
DwayneWade_ta <- c(699,472,439,854,719,692,416,569,415,509)
#Matriz
tiros_anotados <- rbind(KobeBryant_ta, JoeJohnson_ta, LeBronJames_ta, CarmeloAnthony_ta, DwightHoward_ta, ChrisBosh_ta, ChrisPaul_ta, KevinDurant_ta, DerrickRose_ta, DwayneWade_ta)
rm(KobeBryant_ta, JoeJohnson_ta, CarmeloAnthony_ta, DwightHoward_ta, ChrisBosh_ta, LeBronJames_ta, ChrisPaul_ta, DerrickRose_ta, DwayneWade_ta, KevinDurant_ta)
colnames(tiros_anotados) <- temporadas
rownames(tiros_anotados) <- jugadores
#Tiros Intentados
KobeBryant_ti <- c(2173,1757,1690,1712,1569,1639,1336,1595,73,713)
JoeJohnson_ti <- c(1395,1139,1497,1420,1386,1161,931,1052,1018,1025)
LeBronJames_ti <- c(1823,1621,1642,1613,1528,1485,1169,1354,1353,1279)
CarmeloAnthony_ti <- c(1572,1453,1481,1207,1502,1503,1025,1489,1643,806)
DwightHoward_ti <- c(881,873,974,979,834,1044,726,813,800,423)
ChrisBosh_ti <- c(1087,1094,1027,1263,1158,1056,807,907,953,745)
ChrisPaul_ti <- c(947,871,1291,1255,637,928,890,856,870,1170)
KevinDurant_ti <- c(647,647,1366,1390,1668,1538,1297,1433,1688,467)
DerrickRose_ti <- c(436,436,436,1208,1373,1597,695,0,164,835)
DwayneWade_ti <- c(1413,962,937,1739,1511,1384,837,1093,761,1084)
#Matriz
tiros_intentados <- rbind(KobeBryant_ti, JoeJohnson_ti, LeBronJames_ti, CarmeloAnthony_ti, DwightHoward_ti, ChrisBosh_ti, ChrisPaul_ti, KevinDurant_ti, DerrickRose_ti, DwayneWade_ti)
rm(KobeBryant_ti, JoeJohnson_ti, LeBronJames_ti, CarmeloAnthony_ti, DwightHoward_ti, ChrisBosh_ti, ChrisPaul_ti, KevinDurant_ti, DerrickRose_ti, DwayneWade_ti)
colnames(tiros_intentados) <- temporadas
rownames(tiros_intentados) <- jugadores
#Puntos
KobeBryant_puntos <- c(2832,2430,2323,2201,1970,2078,1616,2133,83,782)
JoeJohnson_puntos <- c(1653,1426,1779,1688,1619,1312,1129,1170,1245,1154)
LeBronJames_puntos <- c(2478,2132,2250,2304,2258,2111,1683,2036,2089,1743)
CarmeloAnthony_puntos <- c(2122,1881,1978,1504,1943,1970,1245,1920,2112,966)
DwightHoward_puntos <- c(1292,1443,1695,1624,1503,1784,1113,1296,1297,646)
ChrisBosh_puntos <- c(1572,1561,1496,1746,1678,1438,1025,1232,1281,928)
ChrisPaul_puntos <- c(1258,1104,1684,1781,841,1268,1189,1186,1185,1564)
KevinDurant_puntos <- c(903,903,1624,1871,2472,2161,1850,2280,2593,686)
DerrickRose_puntos <- c(597,597,597,1361,1619,2026,852,0,159,904)
DwayneWade_puntos <- c(2040,1397,1254,2386,2045,1941,1082,1463,1028,1331)
#Matriz
puntos <- rbind(KobeBryant_puntos, JoeJohnson_puntos, LeBronJames_puntos, CarmeloAnthony_puntos, DwightHoward_puntos, ChrisBosh_puntos, ChrisPaul_puntos, KevinDurant_puntos, DerrickRose_puntos, DwayneWade_puntos)
rm(KobeBryant_puntos, JoeJohnson_puntos, LeBronJames_puntos, CarmeloAnthony_puntos, DwightHoward_puntos, ChrisBosh_puntos, ChrisPaul_puntos, KevinDurant_puntos, DerrickRose_puntos, DwayneWade_puntos)
colnames(puntos) <- temporadas
rownames(puntos) <- jugadores
#Matriz para Tiros Libres
#Une los vectores correspondientes para esta matriz
tiros_libres <- rbind(KobeBryant_TL, JoeJohnson_TL, LeBronJames_TL, CarmeloAnthony_TL, DwightHoward_TL, ChrisBosh_TL, ChrisPaul_TL, KevinDurant_TL, DerrickRose_TL, DwayneWade_TL)
KobeBryant_TL <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_TL <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_TL <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_TL <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_TL <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_TL <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_TL <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_TL <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_TL <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_TL <- c(629,432,354,590,534,494,235,308,189,284)
#Matriz para Tiros Libres
#Une los vectores correspondientes para esta matriz
tiros_libres <- rbind(KobeBryant_TL, JoeJohnson_TL, LeBronJames_TL, CarmeloAnthony_TL, DwightHoward_TL, ChrisBosh_TL, ChrisPaul_TL, KevinDurant_TL, DerrickRose_TL, DwayneWade_TL)
#Elimina los vectores que ya no necesitamos
rm(KobeBryant_TL, JoeJohnson_TL, LeBronJames_TL, CarmeloAnthony_TL, DwightHoward_TL, ChrisBosh_TL, ChrisPaul_TL, KevinDurant_TL, DerrickRose_TL, DwayneWade_TL)
#Agrega el nombre de las columnas
colnames(tiros_libres) <- jugadores
#Agrega el nombre de las columnas
colnames(tiros_libres) <- jugadores
#Agrega el nombre de las columnas
colnames(tiros_libres) <- temporadas
#Agrega el nombre de las filas
rownames(tiros_libres) <- jugadores
#Revisar la matriz
tiros_libres
KobeBryant_TLI <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_TLI <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_TLI <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_TLI <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_TLI <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_TLI <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_TLI <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_TLI <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_TLI <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_TLI <- c(803,535,467,771,702,652,297,425,258,370)
#Matriz para Tiros Libres Intentados
#Une los vectores correspondientes para esta matriz
tiros_libres_intentados <- rbind(KobeBryant_TLI, JoeJohnson_TLI, LeBronJames_TLI, CarmeloAnthony_TLI, DwightHoward_TLI, ChrisBosh_TLI, ChrisPaul_TLI, KevinDurant_TLI, DerrickRose_TLI, DwayneWade_TLI)
#Elimina los vectores que ya no necesitamos
rm(KobeBryant_TLI, JoeJohnson_TLI, LeBronJames_TLI, CarmeloAnthony_TLI, DwightHoward_TLI, ChrisBosh_TLI, ChrisPaul_TLI, KevinDurant_TLI, DerrickRose_TLI, DwayneWade_TLI)
#Agrega el nombre de las columnas
colnames(tiros_libres_intentados) <- temporadas
#Agrega el nombre de las columnas
rownames(tiros_libres_intentados) <- temporadas
#Agrega el nombre de las filas
colnames(tiros_libres_intentados) <- jugadores
#Revisa la matriz
tiros_libres_intentados
#Agrega el nombre de las columnas
colnames(tiros_libres_intentados) <- temporadas
#Agrega el nombre de las filas
rownames(tiros_libres_intentados) <- jugadores
#Revisa la matriz
tiros_libres_intentados
#Recrea la funci?n para graficar
mi_funcion <- function(datos, filas=1:10) {
matplot(t(datos[filas,,drop=F]), type="b", pch=15:18, col=c(1:4,6), main="An?lisis de jugadores")
legend("bottomleft", inset=0.01, legend=jugadores[filas], col=c(1:4,6), pch=15:18, horiz=F)
}
#Visualiza las nuevas matrices
mi_funcion(tiros_libres)
matplot(t(datos[filas,,drop=F]), type="b", pch=15:18, col=c(1:4,6), main="Análisis de jugadores")
#Recrea la funci?n para graficar
mi_funcion <- function(datos, filas=1:10) {
matplot(t(datos[filas,,drop=F]), type="b", pch=15:18, col=c(1:4,6), main="Análisis de jugadores")
legend("bottomleft", inset=0.01, legend=jugadores[filas], col=c(1:4,6), pch=15:18, horiz=F)
}
#Visualiza las nuevas matrices
mi_funcion(tiros_libres)
mi_funcion(tiros_libres_intentados)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Jueegos)
mi_funcion(tiros_libres/tiros_libres_intentados)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Juegos)
mi_funcion(tiros_libres_intentados/juegos)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Juegos)
mi_funcion(tiros_libres_intentados/juegos)
#Parte 2 - Precisi?n en Tiros Libres
mi_funcion(tiros_libres/tiros_libres_intentados)
#Y a?n as? la precisi?n de Chris Paul es una de las m?s elevadas
#Tambi?n f?jate que la precisi?n de Dwight Howard est? muy baja
#comparada con otros jugadores. Si recuerdas, comparaddo con
#otros jugadores, Dwight Howard era muy preciso en tiros de campo
mi_funcion(tiros_anotados/tiros_intentados)
#Parte 3 - Estilo de juego del jugador sin contabilizar tiros libres
mi_funcion((puntos - tiros_libres)/tiros_anotados)
(tiros_libres)
#Visualiza las nuevas matrices
mi_funcion(tiros_libres)
mi_funcion(tiros_libres_intentados)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Juegos)
mi_funcion(tiros_libres_intentados/juegos)
mi_funcion(tiros_libres_intentados)
#Parte 1 - Tiros Libres Intentados por Juego
#(Necesitar?s la matriz de Juegos)
mi_funcion(tiros_libres_intentados/juegos)
#Parte 2 - Precisi?n en Tiros Libres
mi_funcion(tiros_libres/tiros_libres_intentados)
#Y a?n as? la precisi?n de Chris Paul es una de las m?s elevadas
#Tambi?n f?jate que la precisi?n de Dwight Howard est? muy baja
#comparada con otros jugadores. Si recuerdas, comparaddo con
#otros jugadores, Dwight Howard era muy preciso en tiros de campo
mi_funcion(tiros_anotados/tiros_intentados)
#Parte 3 - Estilo de juego del jugador sin contabilizar tiros libres
mi_funcion((puntos - tiros_libres)/tiros_anotados)
?read.csv()
# Método #1: Seleccionar el archivo manualmente
datos <- read.csv(file.choose())
# Método #1: Seleccionar el archivo manualmente
datos <- read.csv(file.choose())
datos
# Método #2: Establecer el Directorio de Trabajo (Working Directory)
getwd() # Veamos primero el Working Directory
# Windows
setwd("C:\\Git\\R_para_Data_Science_con_Ejercicios_Reales\\Marco de Datos (Data Frames)")
# Método #2: Establecer el Directorio de Trabajo (Working Directory)
getwd() # Veamos primero el Working Directory (WD)
rm(datos)
datos <- read.csv("DatosDemograficos.csv")
datos
# Explorando datos
datos <- read.csv("DatosDemograficos.csv")
# Número de filas del dataframe:
nrow(datos)
# Número de columnas del dataframe:
ncol(datos)
# Ver las priemras 6 filas
head(datos)
# Ver las últimas 6 filas
tail(datos)
# Para un número específico de filas
head(datos , n=10)
tail(datos , n=2
tail(datos , n=2)
tail(datos , n=2)
# Cer estructura o desglose del dataframe:
str(datos)
# Resúmen descriptivo del dataframe:
sumary(datos)
# Resúmen descriptivo del dataframe:
summary(datos)
# Símbolo $:
datos <- read.csv("DatosDemograficos.csv")
datos
head(datos)
# Ver elementos:
datos[4,3]
datos[4,"Tasa.Natalidad"]
datos["Albania",3]
# Ver elementos de la columna
datos$Tasa.Natalidad
# También hay una forma equivalente a la anterior
datos[,"Tasa.Natalidad"]
datos$Tasa.Natalidad[4]
# Ver niveles de una columna de datos categóricos:
vector1 <- levels(datos$Grupo.Ingresos)
vector1
# Ver conjuntos de filas
datos[3:9,]
datos[c(4,100),]
datos[1,]
# Verificar si un conjunto de datos es un dataframe:
is.data.frame(data[1,])
# Verificar si un conjunto de datos es un dataframe:
is.data.frame(datos[1,])
# Veamos los elementos de la columna de un dataframe:
datos[,1]
# Se aprecia que es un vector
is.data.frame(datos[,1])
# Corrección
datos[,1,drop=F]
# Se hace evidente que ahora es un dataframe
is.data.frame(datos[,1,drop=F])
# Multipliquemos columnas de un dataframe:
datos$Tasa.Natalidad * datos$Penetracion.Internet
# Creación de una nueva columna
head(datos)
datos$nueva_columna <- datos$Tasa.Natalidad * datos$Penetracion.Internet
head(datos)
# Creación de una nueva columna
head(datos)
# Ejemplo de reciclado de vectores:
datos$xyz <- 1:5
# datos <- 1:4 marca error porque 195 no es múltiplo
# de 4
head(datos , n=12)
# datos <- 1:4 marca error porque 195 no es múltiplo
# de 4
head(datos , n=12)
# Borrar columnas
datos$xyz <- NULL
head(datos)
datos$nueva_columna <- NULL
head(datos)
# Filtrar un Marco de Datos(Dataframe)
datos <- read.csv("DatosDemograficos.csv")
datos
# Filtremos und ataframe de acuerdo a una condición
head(datos)
filtro <- datos$Penetracion.Internet <2
datos[filtro,]
# Filtremos und ataframe de acuerdo a una condición
head(datos)
#            Nombre.Pais Codigo.Pais Tasa.Natalidad Penetracion.Internet     Grupo.Ingresos
# 1                Aruba         ABW         10.244                 78.9       Ingreso alto
# 2          Afghanistan         AFG         35.253                  5.9       Ingreso bajo
# 3               Angola         AGO         45.985                 19.1 Ingreso medio alto
# 4              Albania         ALB         12.877                 57.2 Ingreso medio alto
# 5 United Arab Emirates         ARE         11.044                 88.0       Ingreso alto
# 6            Argentina         ARG         17.716                 59.9       Ingreso alto
filtro <- datos$Penetracion.Internet <2
datos[filtro,]
# Otro ejemplo: Países donde por cada 1000 habitantes hay
# 40 nacimientos por año
datos[datos$Tasa.Natalidad > 40]
# Otro ejemplo: Países donde por cada 1000 habitantes hay
# 40 nacimientos por año
datos[datos$Tasa.Natalidad > 40,]
# Juntando las dos condiciones anteriores
datos[datos$Tasa.Natalidad > 40 & datos$Penetracion.Internet < 2,]
# Filtrando una columna de datos catégoricos dada una categoría
datos[datos$Grupo.Ingresos == "Ingreso alto"]
# Filtrando una columna de datos catégoricos dada una categoría
levels(datos$)
# Filtrando una columna de datos catégoricos dada una categoría
levels(datos$Grupo.Ingresos)
# Filtemos a los grupos de ingreso alto
datos[datos$Grupo.Ingresos == "Ingreso alto",]
# Busquemos los datos de un país en específico
datos[datos$Nombre.Pais == "Malta"]
# Busquemos los datos de un país en específico
datos[datos$Nombre.Pais == "Malta",]
source('C:/Git/R_para_Data_Science_con_Ejercicios_Reales/Marco de Datos (Data Frames)/operaciones_dataframe.R', encoding = 'UTF-8')
# Graficando datos con qplot:
datos <- read.csv("DatosDemograficos.csv")
datos
datos <- read.csv("DatosDemograficos.csv")
datos
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
install.packages(ggplot2)
library(ggplot2)
?qplot # No podemos ver el help porque no se ha isntalado
# Ejemplo 1:
qplot(data=datos , x=Penetracion.Internet)
qplot(data = datos , x = Grupo.Ingresos)
# Ejemplo 2:
qplot(data = datos , x = Grupo.Ingresos  , y = Tasa.Natalidad)
# DD_GI_cat_TN_2:
qplot(data = datos , x = Grupo.Ingresos  , y = Tasa.Natalidad , size = 10)
# DD_GI_cat_TN_3:
qplot(data = datos , x = Grupo.Ingresos  , y = Tasa.Natalidad , size = I(10))
# DD_GI_cat_TN_4:
qplot(data = datos , x = Grupo.Ingresos  , y = Tasa.Natalidad , size = I(10), color = "blue")
# DD_GI_cat_TN_4:
qplot(data = datos , x = Grupo.Ingresos  , y = Tasa.Natalidad , size = I(3), color = "blue")
# DD_GI_cat_TN_5:
qplot(data = datos , x = Grupo.Ingresos  , y = Tasa.Natalidad , size = I(3), color = I("blue"))
# DD_GI_cat_TN_6:
qplot(data = datos , x = Grupo.Ingresos  , y = Tasa.Natalidad , geom = "boxplot")
# Visualizando la solicitud
datos <- read.csv("DatosDemograficos.csv")
# Partamos
qplot(data=datos , x=Penetracion.Internet, y=Tasa.Natalidad)
qplot(data=datos , x=Penetracion.Internet , y=Tasa.Natalidad , size=I(5))
qplot(data=datos , x=Penetracion.Internet , y=Tasa.Natalidad , size=I(5) , color=Grupo.Ingresos)
qplot(data=datos , x=Penetracion.Internet , y=Tasa.Natalidad , size=I(5))
# Partamos
qplot(data=datos , x=Penetracion.Internet , y=Tasa.Natalidad)
source('~/.active-rstudio-document', encoding = 'UTF-8')
qplot(data=datos , x=Penetracion.Internet , y=Tasa.Natalidad , size=I(5) , color=Grupo.Ingresos)
# Construyendo un Marco de datos (Data Frame)
datos <- read.csv("DatosDemograficos.csv")
Pais_dataset_p2 <- c("Aruba","Afghanistan","Angola","Albania","United Arab Emirates","Argentina","Armenia","Antigua and Barbuda","Australia","Austria","Azerbaijan","Burundi","Belgium","Benin","Burkina Faso","Bangladesh","Bulgaria","Bahrain","Bahamas, The","Bosnia and Herzegovina","Belarus","Belize","Bermuda","Bolivia","Brazil","Barbados","Brunei Darussalam","Bhutan","Botswana","Central African Republic","Canada","Switzerland","Chile","China","Cote d'Ivoire","Cameroon","Congo, Rep.","Colombia","Comoros","Cabo Verde","Costa Rica","Cuba","Cayman Islands","Cyprus","Czech Republic","Germany","Djibouti","Denmark","Dominican Republic","Algeria","Ecuador","Egypt, Arab Rep.","Eritrea","Spain","Estonia","Ethiopia","Finland","Fiji","France","Micronesia, Fed. Sts.","Gabon","United Kingdom","Georgia","Ghana","Guinea","Gambia, The","Guinea-Bissau","Equatorial Guinea","Greece","Grenada","Greenland","Guatemala","Guam","Guyana","Hong Kong SAR, China","Honduras","Croatia","Haiti","Hungary","Indonesia","India","Ireland","Iran, Islamic Rep.","Iraq","Iceland","Israel","Italy","Jamaica","Jordan","Japan","Kazakhstan","Kenya","Kyrgyz Republic","Cambodia","Kiribati","Korea, Rep.","Kuwait","Lao PDR","Lebanon","Liberia","Libya","St. Lucia","Liechtenstein","Sri Lanka","Lesotho","Lithuania","Luxembourg","Latvia","Macao SAR, China","Morocco","Moldova","Madagascar","Maldives","Mexico","Macedonia, FYR","Mali","Malta","Myanmar","Montenegro","Mongolia","Mozambique","Mauritania","Mauritius","Malawi","Malaysia","Namibia","New Caledonia","Niger","Nigeria","Nicaragua","Netherlands","Norway","Nepal","New Zealand","Oman","Pakistan","Panama","Peru","Philippines","Papua New Guinea","Poland","Puerto Rico","Portugal","Paraguay","French Polynesia","Qatar","Romania","Russian Federation","Rwanda","Saudi Arabia","Sudan","Senegal","Singapore","Solomon Islands","Sierra Leone","El Salvador","Somalia","Serbia","South Sudan","Sao Tome and Principe","Suriname","Slovak Republic","Slovenia","Sweden","Swaziland","Seychelles","Syrian Arab Republic","Chad","Togo","Thailand","Tajikistan","Turkmenistan","Timor-Leste","Tonga","Trinidad and Tobago","Tunisia","Turkey","Tanzania","Uganda","Ukraine","Uruguay","United States","Uzbekistan","St. Vincent and the Grenadines","Venezuela, RB","Virgin Islands (U.S.)","Vietnam","Vanuatu","West Bank and Gaza","Samoa","Yemen, Rep.","South Africa","Congo, Dem. Rep.","Zambia","Zimbabwe")
Codigo_Pais_dataset_p2 <- c("ABW","AFG","AGO","ALB","ARE","ARG","ARM","ATG","AUS","AUT","AZE","BDI","BEL","BEN","BFA","BGD","BGR","BHR","BHS","BIH","BLR","BLZ","BMU","BOL","BRA","BRB","BRN","BTN","BWA","CAF","CAN","CHE","CHL","CHN","CIV","CMR","COG","COL","COM","CPV","CRI","CUB","CYM","CYP","CZE","DEU","DJI","DNK","DOM","DZA","ECU","EGY","ERI","ESP","EST","ETH","FIN","FJI","FRA","FSM","GAB","GBR","GEO","GHA","GIN","GMB","GNB","GNQ","GRC","GRD","GRL","GTM","GUM","GUY","HKG","HND","HRV","HTI","HUN","IDN","IND","IRL","IRN","IRQ","ISL","ISR","ITA","JAM","JOR","JPN","KAZ","KEN","KGZ","KHM","KIR","KOR","KWT","LAO","LBN","LBR","LBY","LCA","LIE","LKA","LSO","LTU","LUX","LVA","MAC","MAR","MDA","MDG","MDV","MEX","MKD","MLI","MLT","MMR","MNE","MNG","MOZ","MRT","MUS","MWI","MYS","NAM","NCL","NER","NGA","NIC","NLD","NOR","NPL","NZL","OMN","PAK","PAN","PER","PHL","PNG","POL","PRI","PRT","PRY","PYF","QAT","ROU","RUS","RWA","SAU","SDN","SEN","SGP","SLB","SLE","SLV","SOM","SRB","SSD","STP","SUR","SVK","SVN","SWE","SWZ","SYC","SYR","TCD","TGO","THA","TJK","TKM","TLS","TON","TTO","TUN","TUR","TZA","UGA","UKR","URY","USA","UZB","VCT","VEN","VIR","VNM","VUT","PSE","WSM","YEM","ZAF","COD","ZMB","ZWE")
Region_dataset_p2 <- c("The Americas","Asia","Africa","Europe","Middle East","The Americas","Asia","The Americas","Oceania","Europe","Asia","Africa","Europe","Africa","Africa","Asia","Europe","Middle East","The Americas","Europe","Europe","The Americas","The Americas","The Americas","The Americas","The Americas","Asia","Asia","Africa","Africa","The Americas","Europe","The Americas","Asia","Africa","Africa","Africa","The Americas","Africa","Africa","The Americas","The Americas","The Americas","Europe","Europe","Europe","Africa","Europe","The Americas","Africa","The Americas","Africa","Africa","Europe","Europe","Africa","Europe","Oceania","Europe","Oceania","Africa","Europe","Asia","Africa","Africa","Africa","Africa","Africa","Europe","The Americas","The Americas","The Americas","Oceania","The Americas","Asia","The Americas","Europe","The Americas","Europe","Asia","Asia","Europe","Middle East","Middle East","Europe","Middle East","Europe","The Americas","Middle East","Asia","Asia","Africa","Asia","Asia","Oceania","Asia","Middle East","Asia","Middle East","Africa","Africa","The Americas","Europe","Asia","Africa","Europe","Europe","Europe","Asia","Africa","Europe","Africa","Asia","The Americas","Europe","Africa","Europe","Asia","Europe","Asia","Africa","Africa","Africa","Africa","Asia","Africa","Oceania","Africa","Africa","The Americas","Europe","Europe","Asia","Oceania","Middle East","Asia","The Americas","The Americas","Asia","Oceania","Europe","The Americas","Europe","The Americas","Oceania","Middle East","Europe","Europe","Africa","Middle East","Africa","Africa","Asia","Oceania","Africa","The Americas","Africa","Europe","Africa","Africa","The Americas","Europe","Europe","Europe","Africa","Africa","Middle East","Africa","Africa","Asia","Asia","Asia","Asia","Oceania","The Americas","Africa","Europe","Africa","Africa","Europe","The Americas","The Americas","Asia","The Americas","The Americas","The Americas","Asia","Oceania","Middle East","Oceania","Middle East","Africa","Africa","Africa","Africa")
mi_dataframe <- data.frame(Pais_dataset_p2 , Codigo_Pais_dataset_p2
Region_dataset_p2)
mi_dataframe <- data.frame(Pais_dataset_p2 , Codigo_Pais_dataset_p2 ,
Region_dataset_p2)
head(mi_dataframe)
head(mi_dataframe)
# Cambiemos el nombre de las columnas
colnames(mi_dataframe) <- c("Pais","Codigo","Region")
head(mi_dataframe)
rm(mi_dataframe)
# Método 2:
mi_dataframe <- data.frame(Pais = Pais_dataset_p2 , Codigo = Codigo_Pais_dataset_p2 ,
Region = Region_dataset_p2)
head(mi_dataframe)
Pais_dataset_p2
summary(mi_dataframe)
# Lo data frames ya fueron cargados previamente.
head(datos)
# Lo data frames ya fueron cargados previamente.
head(datos)
head(mi_dataframe)
dataframe_combinado <- merge(datos , mi_dataframe,
by.x="Codigo.Pais" , by.y="Codigo")
head(dataframe_combinado)
# Quitemos la otra columna repetida: Nombre del Pais
dataframe_combinado$Pais <- NULL
head(dataframe_combinado)
